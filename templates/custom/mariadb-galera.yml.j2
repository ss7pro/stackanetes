{%- if ports %}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ namespace }}
  name: {{ service_name }}
spec:
    {%- if session_affinity %}
  sessionAffinity: ClientIP
    {%- endif %}
    {%- if external_ip_enabled %}
  externalIPs:
    - {{ external_ip }}
    {%- endif %}
  ports:
    {%- for port in ports %}
  - name: {{ service_name.split('-')[0] }}{{ port['port'] }}
    port: {{ port['port'] }}
    protocol: TCP
    {%- if port['target_port'] %}
    targetPort: {{ port['target_port'] }}
    {%- endif %}
    {%- endfor %}
  selector:
    mariadb-cluster: stackanetes
{%- endif %}

---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: {{ namespace }}
  name: {{ service_name }}
spec:
  template:
    metadata:
      namespace: {{ namespace }}
      labels:
        app: {{ service_name }}
        mariadb-cluster: stackanetes
      name: {{ service_name }}
      annotations:
{%- for key, value in annotations.iteritems() %}
        {{ key }}: {{value}}
{%- endfor %}
    spec:
{%- if host_pid %}
      hostPID: true
{%- endif %}
{%- if label %}
#TODO(tomasz.paszkowski): FIXME
#      nodeSelector:
#        {{ label }}: enabled
{% endif %}
      securityContext:
        runAsUser: 0
      dnsPolicy: ClusterFirst
{%- if host_network %}
      hostNetwork: true
{%- endif %}
      volumes:
{%- for configmap in configmaps %}
        - name: {{ configmap['configmap_name'] }}
          configMap:
            name: {{ configmap['configmap_name'] }}
            items:
            - key: {{ configmap['file_name'] }}
              path: {{ configmap['file_name'] }}
{%- endfor %}
{%- for emptydir in emptydirs %}
        - name: {{ emptydir['name'] }}
          emptyDir: {}
{%- endfor %}
{%- for mount in mounts %}
        - name: {{ mount['name'] }}
          hostPath:
            path: {{ mount['host_path'] }}
{%- endfor %}
      containers:
        - name: {{ service_name }}
{%- if privileged %}
          securityContext:
            privileged: true
{%- endif %}
{%- if image %}
          image: {{ docker_registry }}/{{ image_prefix }}{{ image }}:{{ image_version }}
{%- else %}
          image: {{ docker_registry }}/{{ image_prefix }}{{ service_name }}:{{ image_version }}
{%- endif %}
          imagePullPolicy: Always
          env:
            - name: INTERFACE_NAME
              value: "eth0"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{%- for env in envs %}
            - name: {{ env.keys()[0] }}
              value: "{{ env.values()[0] }}"
{%- endfor %}
{%- if ports != [] %}
          ports:
    {%- for port in ports %}
          - containerPort: {{ port['target_port'] }}
            name: {{ service_name.split('-')[0] }}{{ port['target_port'] }}
            protocol: TCP
    {%- endfor %}
{%- endif %}
{%- if host_ports != [] %}
    {%- for port in host_ports %}
          - hostPort: {{ port['port'] }}
            containerPort: {{ port['port'] }}
            name: {{ service_name.split('-')[0] }}{{ port['port'] }}
            protocol: TCP
    {%- endfor %}
{%- endif %}
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - mysql -uroot -p${DB_ROOT_PASSWORD} -e'show status' | grep 'wsrep_cluster_status'
                | grep 'Primary'
          resources:
            limits:
              memory: {{ memory }}
          volumeMounts:
{%- for configmap in configmaps %}
            - name: {{ configmap['configmap_name'] }}
              {%- if configmap['dest_file_name'] %}
              mountPath: /configmaps/{{ configmap['dest_file_name'] }}
              {%- else %}
              mountPath: /configmaps/{{ configmap['file_name'] }}
              {% endif %}
{%- endfor %}
{%- for mount in mounts %}
            - mountPath: {{ mount['container_path'] }}
              name: {{ mount['name'] }}
    {% if mount['read_only'] %}
              readOnly: true
    {% endif %}
{%- endfor %}
{%- for emptydir in emptydirs %}
            - name: {{ emptydir['name'] }}
              mountPath: {{ emptydir['container_path'] }}
{%- endfor %}
{%- if host_network %}
      hostNetwork: true
{%- endif %}
      volumes:
{%- for configmap in configmaps %}
        - name: {{ configmap['configmap_name'] }}
          configMap:
            name: {{ configmap['configmap_name'] }}
            items:
            - key: {{ configmap['file_name'] }}
              {%- if configmap['dest_file_name'] %}
              path: {{ configmap['dest_file_name'] }}
              {%- else %}
              path: {{ configmap['file_name'] }}
              {%- endif %}
{%- endfor %}
{%- for emptydir in emptydirs %}
        - name: {{ emptydir['name'] }}
          emptyDir: {}
{%- endfor %}
  {%- for mount in mounts %}
        - name: {{ mount['name'] }}
          hostPath:
            path: {{ mount['host_path'] }}
  {%- endfor %}
