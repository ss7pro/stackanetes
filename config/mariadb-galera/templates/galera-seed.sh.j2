#!/bin/sh

set -e
set -x

SLEEP_TIMEOUT=5
# we need to count seed instance here.
MINIMUM_CLUSTER_SIZE=4

trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

function bootstrap_db {
    mysqld --defaults-file=/etc/my.cnf --console --wsrep-new-cluster \
           --wsrep_cluster_address="gcomm://" \
           --bind-address="127.0.0.1" --wsrep_node_address="127.0.0.1" \
           --wsrep_provider_options="gcache.size=512M; gmcast.listen_addr=tcp://127.0.0.1:4567" &
    # Wait for the mariadb server to be "Ready" before starting the security reset with a max timeout
    TIMEOUT=${DB_MAX_TIMEOUT:-60}
    while [[ ! -f /var/lib/mysql/mariadb.pid ]]; do
        if [[ ${TIMEOUT} -gt 0 ]]; then
            let TIMEOUT-=1
            sleep 1
        else
            exit 1
        fi
    done
    sudo -E kolla_security_reset
    mysql -u root --password="${DB_ROOT_PASSWORD}" -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY '${DB_ROOT_PASSWORD}' WITH GRANT OPTION;"
    mysql -u root --password="${DB_ROOT_PASSWORD}" -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${DB_ROOT_PASSWORD}' WITH GRANT OPTION;"
    mysqladmin -uroot -p"${DB_ROOT_PASSWORD}" shutdown
}

function wait_for_cluster {
    # Wait for the mariadb server to be "Ready" before starting the security reset with a max timeout
    TIMEOUT=${DB_MAX_TIMEOUT:-60}
    while [[ ! -f /var/lib/mysql/mariadb.pid ]]; do
        if [[ ${TIMEOUT} -gt 0 ]]; then
            let TIMEOUT-=1
            sleep 1
        else
            exit 1
        fi
    done
    # wait until we have at least two more members in a cluster.
    while true ; do
        CLUSTER_SIZE=`mysql -uroot -p${DB_ROOT_PASSWORD} -e'show status' | grep wsrep_cluster_size | awk ' { if($2 ~ /[0-9]/){ print $2 } else { print 0 } } '`
        if [ "${CLUSTER_SIZE}" -lt ${MINIMUM_CLUSTER_SIZE} ] ; then
            echo "Cluster seed not finished, waiting." 
            sleep ${SLEEP_TIMEOUT}
            continue
        fi
        CLUSTER_STATUS=`mysql -uroot -p${DB_ROOT_PASSWORD} -e'show status' | grep wsrep_local_state_comment | awk ' { print $2 } '`
        if [ "${CLUSTER_STATUS}" != "Synced" ] ; then
            echo "Cluster not synced, waiting." 
            sleep ${SLEEP_TIMEOUT}
            continue
        fi
        # Count number of endpoint separators.
        ENDPOINTS_CNT=`python /tmp/peer-finder.py mariadb-galera | grep -o ',' | wc -l`
        # TODO(tomasz.paszkowski): Fix a corner case when only one endpoint is on the list.
        # Add +1 for seed node and +1 as first item does not have a separator
        ENDPOINTS_CNT=$(($ENDPOINTS_CNT+2))
        if [ "${ENDPOINTS_CNT}" != "${CLUSTER_SIZE}" ] ; then
            echo "Cluster not synced, waiting."
            sleep ${SLEEP_TIMEOUT}
            continue
        fi
        echo "Cluster ready, exiting seed."
        kill -- -$$
        break
    done
}

mysql_install_db
bootstrap_db
mysqld --defaults-file=/etc/my.cnf --console --wsrep-new-cluster --wsrep_cluster_address="gcomm://" &
wait_for_cluster
exit 0
